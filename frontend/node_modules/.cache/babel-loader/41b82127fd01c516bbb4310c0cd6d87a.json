{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shubham\\\\Desktop\\\\heroku\\\\react-contact-form\\\\src\\\\ContactUs.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ContactUs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i); // const validateForm = (errors) => {\n//   let valid = true;\n//   Object.values(errors).forEach(\n//     (val) => val.length > 0 && (valid = false)\n//   );\n//   return valid;\n// }\n// const countErrors = (errors) => {\n//   let count = 0;\n//   Object.values(errors).forEach(\n//     (val) => val.length > 0 && (count = count+1)\n//   );\n//   return count;\n// }\n\nclass ContactUs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n      let valid = this.state.valid;\n      let formEmpty = this.state.formEmpty;\n      formEmpty.value = false;\n\n      switch (name) {\n        case 'fullName':\n          valid.name = value.length > 5 ? true : false;\n          errors.fullName = value.length < 5 ? 'Full Name must be 5 characters long!' : '';\n          break;\n\n        case 'email':\n          valid.email = validEmailRegex.test(value) ? true : false;\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'phone':\n          valid.phone = value.length === 10 ? true : false;\n          errors.phone = value.length < 10 ? 'phone must be of 10 Digits!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      // this.setState({formValid: validateForm(this.state.errors)});\n      // this.setState({errorCount: countErrors(this.state.errors)});\n      // event.preventDefault();\n      let valid = this.state.valid;\n      let isValid = valid.email && valid.name && valid.phone;\n      event.preventDefault();\n\n      if (isValid) {\n        const {\n          name,\n          phone,\n          email,\n          message\n        } = event.target.elements;\n        let details = {\n          name: name.value,\n          phone: phone.value,\n          email: email.value,\n          message: message.value\n        };\n        let response = await fetch(\"http://localhost:5000/contact\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json;charset=utf-8\"\n          },\n          body: JSON.stringify(details)\n        });\n        let result = await response.json();\n\n        if (result.status === \"Message Sent\") {\n          var inputs = document.querySelectorAll('input');\n          forEach(inputs, input => {});\n        }\n      }\n    };\n\n    this.state = {\n      formEmpty: {\n        value: true\n      },\n      errorCount: null,\n      errors: {\n        fullName: '',\n        email: '',\n        phone: ''\n      },\n      valid: {\n        name: false,\n        phone: false,\n        email: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      errors,\n      valid,\n      formEmpty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          method: \"post\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fullName\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fullName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              name: \"fullName\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), errors.fullName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), errors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"phone\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"phone\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              id: \"phone\",\n              name: \"phone\",\n              maxLength: \"10\",\n              onChange: this.handleChange,\n              noValidate: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), errors.phone.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error\",\n              children: errors.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"message\",\n              name: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"captcha h-captcha\",\n            \"data-sitekey\": \"b4da1987-303c-4771-97c1-c576311369e1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"form-status\",\n            children: [\"Form is \", formEmpty.value ? 'Empty ❔' : valid.name && valid.email && valid.phone ? 'valid ✅' : 'invalid ❌']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 170,\n  columnNumber: 8\n}, this), document.getElementById('root'));\nexport default ContactUs;","map":{"version":3,"sources":["C:/Users/Shubham/Desktop/heroku/react-contact-form/src/ContactUs.js"],"names":["React","Component","useState","useEffect","render","App","validEmailRegex","RegExp","ContactUs","constructor","props","handleChange","event","preventDefault","name","value","target","errors","state","valid","formEmpty","length","fullName","email","test","phone","setState","handleSubmit","isValid","message","elements","details","response","fetch","method","headers","body","JSON","stringify","result","json","status","inputs","document","querySelectorAll","forEach","input","errorCount","getElementById"],"mappings":"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","sourcesContent":["import React, { Component , useState ,useEffect } from 'react';\r\nimport { render } from 'react-dom';\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    \r\n    return (\r\n      <ContactUs />\r\n    );\r\n  }\r\n}\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\n// const validateForm = (errors) => {\r\n//   let valid = true;\r\n  \r\n//   Object.values(errors).forEach(\r\n//     (val) => val.length > 0 && (valid = false)\r\n//   );\r\n//   return valid;\r\n// }\r\n\r\n// const countErrors = (errors) => {\r\n//   let count = 0;\r\n//   Object.values(errors).forEach(\r\n//     (val) => val.length > 0 && (count = count+1)\r\n//   );\r\n//   return count;\r\n// }\r\n\r\nclass ContactUs extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n      formEmpty: {value:true},\r\n      errorCount: null,\r\n      errors: {\r\n        fullName: '',\r\n        email: '',\r\n        phone: '',\r\n      },\r\n      valid:{\r\n        name:false,\r\n        phone:false,\r\n        email:false        \r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { name, value } = event.target;\r\n    let errors = this.state.errors;\r\n    let valid = this.state.valid;\r\n    let formEmpty = this.state.formEmpty;\r\n    formEmpty.value=false;\r\n    switch (name) {\r\n      case 'fullName': \r\n      valid.name = value.length>5?true:false;\r\n        errors.fullName = \r\n          value.length < 5\r\n            ? 'Full Name must be 5 characters long!'\r\n            : '';\r\n        break;\r\n      case 'email': \r\n      valid.email = validEmailRegex.test(value)?true:false;\r\n        errors.email = \r\n          validEmailRegex.test(value)\r\n            ? ''\r\n            : 'Email is not valid!';\r\n        break;\r\n      case 'phone': \r\n      valid.phone = value.length === 10?true:false\r\n        errors.phone = \r\n          value.length < 10\r\n            ? 'phone must be of 10 Digits!'\r\n            : '';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    this.setState({errors, [name]: value});\r\n  }\r\n\r\n  \r\n\r\n  handleSubmit = async (event) => {\r\n    // this.setState({formValid: validateForm(this.state.errors)});\r\n    // this.setState({errorCount: countErrors(this.state.errors)});\r\n    // event.preventDefault();\r\n    let valid=this.state.valid;\r\n    let isValid = valid.email && valid.name && valid.phone;\r\n    \r\n    event.preventDefault();\r\n\r\n    if(isValid){\r\n    const { name, phone, email, message } = event.target.elements;\r\n    let details = {\r\n      name: name.value,\r\n      phone:phone.value,\r\n      email: email.value,\r\n      message: message.value\r\n    };\r\n    \r\n    let response = await fetch(\"http://localhost:5000/contact\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\",\r\n      },\r\n      body: JSON.stringify(details),\r\n    });\r\n\r\n    let result =  await response.json();\r\n\r\n    if(result.status === \"Message Sent\"){\r\n      var inputs = document.querySelectorAll('input');\r\n      forEach(inputs, (input) => {})\r\n    } \r\n  }\r\n   \r\n  }\r\n\r\n  \r\n  render() {\r\n    const {errors,valid,formEmpty} = this.state;\r\n    return (\r\n      <div className='wrapper'>\r\n        <div className='form-wrapper'>\r\n          <h2>Create Account</h2>\r\n          <form onSubmit={this.handleSubmit} method='post' noValidate>\r\n            <div className='fullName'>\r\n              <label htmlFor=\"fullName\">Full Name</label>\r\n              <input type='text' id='name' name='fullName' onChange={this.handleChange} noValidate />\r\n              {errors.fullName.length > 0 && \r\n                <span className='error'>{errors.fullName}</span>}\r\n            </div>\r\n            <div className='email'>\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input type='email' id='email' name='email' onChange={this.handleChange} noValidate />\r\n              {errors.email.length > 0 && \r\n                <span className='error'>{errors.email}</span>}\r\n            </div>\r\n            <div className='phone'>\r\n              <label htmlFor=\"phone\">Mobile Number</label>\r\n              <input type='tel' id='phone' name='phone' maxLength=\"10\" onChange={this.handleChange} noValidate />\r\n              {errors.phone.length > 0 && \r\n                <span className='error'>{errors.phone}</span>}\r\n            </div>\r\n            <div className='message'>\r\n              <label htmlFor=\"message\">Message</label>\r\n              <textarea id='message' name='message'/>\r\n            </div>\r\n\r\n            <div class=\"captcha h-captcha\" data-sitekey=\"b4da1987-303c-4771-97c1-c576311369e1\"></div>\r\n          \r\n            <div className='submit'>\r\n              <button type=\"submit\">Submit</button>\r\n            </div>\r\n             <p className=\"form-status\">Form is {formEmpty.value?'Empty ❔':valid.name && valid.email && valid.phone ? 'valid ✅' : 'invalid ❌'}</p> \r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\nexport default ContactUs;"]},"metadata":{},"sourceType":"module"}